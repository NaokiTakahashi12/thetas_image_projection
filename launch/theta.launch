<?xml version="1.0"?>
<launch>
  <arg name="camera_name" value="camera360"/>
  <arg name="front_image_name" default="right"/>
  <arg name="rear_image_name" default="left"/>
  <arg name="split_image_width" default="640"/>
  <arg name="split_image_height" default="720"/>
  <rosparam file="$(find image_projection_demo)/config/projections.yaml" command="load" subst_value="true"/>
  <node name="libuvc_camera" pkg="libuvc_camera" type="camera_node" output="screen">
    <param name="vendor" value="0x05ca"/>
    <param name="product" value="0x2711"/>
    <param name="serial" value=""/>
    <param name="width" value="1280"/>
    <param name="height" value="720"/>
    <param name="video_mode" value="mjpeg"/>
    <param name="frame_rate" value="14"/>
    <param name="timestamp_method" value="start"/>
    <param name="camera_info_url" value="file:///tmp/cam.yaml"/>
    <param name="auto_exposure" value="3"/>
    <param name="auto_white_balance" value="false"/>
    <param name="frame_id" value="camera360_center_link"/>
  </node>
  <node name="$(arg camera_name)_split_right" pkg="image_proc" type="image_proc" output="screen">
    <param name="queue_size" type="int" value="3"/>
    <param name="x_offset" type="int" value="0"/>
    <param name="y_offset" type="int" value="0"/>
    <param name="width" type="int" value="$(arg split_image_width)"/>
    <param name="height" type="int" value="$(arg split_image_height)"/>
    <param name="camera_name" value="front"/>
    <param name="target_frame_id" value="$(arg camera_name)_right_optical_frame"/>
    <remap from="camera/image_raw" to="/$(arg camera_name)/image_raw"/>
    <remap from="camera/image_info" to="/$(arg camera_name)/camera_info"/>
    <remap from="camera_out/image_raw" to="/$(arg camera_name)/$(arg front_image_name)/image_raw"/>
    <remap from="/stereo/right/camera_info" to="/null/right/camera_info"/>
  </node>
  <node name="$(arg camera_name)_split_left" pkg="image_proc" type="image_proc" output="screen">
    <param name="queue_size" type="int" value="3"/>
    <param name="x_offset" type="int" value="$(arg split_image_width)"/>
    <param name="y_offset" type="int" value="0"/>
    <param name="width" type="int" value="$(arg split_image_width)"/>
    <param name="height" type="int" value="$(arg split_image_height)"/>
    <param name="camera_name" value="rear"/>
    <param name="target_frame_id" value="$(arg camera_name)_left_optical_frame"/>
    <remap from="camera/image_raw" to="/$(arg camera_name)/image_raw"/>
    <remap from="camera/image_info" to="/$(arg camera_name)/camera_info"/>
    <remap from="camera_out/image_raw" to="/$(arg camera_name)/$(arg rear_image_name)/image_raw"/>
    <remap from="/stereo/left/camera_info" to="/null/left/camera_info"/>
  </node>
  <node name="$(arg camera_name)_pinhole_front" pkg="image_projection" type="periodic_image_projection_node" output="screen" respawn="true">
    <rosparam file="$(find image_projection_demo)/config/$(arg camera_name)_cameras.yaml" command="load"/>
    <remap from="~projection" to="/$(arg camera_name)/pinhole_front/image_rect_color"/>
    <remap from="~camera_info" to="/$(arg camera_name)/pinhole_front/camera_info"/>
  </node>
  <node name="$(arg camera_name)_mercator_projection" pkg="image_projection" type="periodic_image_projection_node" output="screen" respawn="true">
    <rosparam file="$(find image_projection_demo)/config/$(arg camera_name)_cameras.yaml" command="load"/>
    <remap from="~projection" to="/$(arg camera_name)/mercator"/>
  </node>
  <node name="$(arg camera_name)_left_fisheye" pkg="image_projection" type="periodic_image_projection_node" output="screen">
    <rosparam file="$(find image_projection_demo)/config/$(arg camera_name)_cameras.yaml" command="load"/>
    <remap from="~projection" to="/$(arg camera_name)/left/ideal_fisheye"/>
  </node>
  <node name="$(arg camera_name)_right_fisheye" pkg="image_projection" type="periodic_image_projection_node" output="screen">
    <rosparam file="$(find image_projection_demo)/config/$(arg camera_name)_cameras.yaml" command="load"/>
    <remap from="~projection" to="/$(arg camera_name)/right/ideal_fisheye"/>
  </node>
  <include file="$(find image_projection_demo)/launch/rqt.launch"/>
</launch>
